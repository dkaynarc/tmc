//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TmcData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ICTDEntities : DbContext
    {
        public ICTDEntities()
            : base("name=ICTDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<OrderList> OrderLists { get; set; }
    
        public virtual int AddNewOrder(Nullable<int> userID, Nullable<int> black, Nullable<int> blue, Nullable<int> red, Nullable<int> green, Nullable<int> white)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var blackParameter = black.HasValue ?
                new ObjectParameter("Black", black) :
                new ObjectParameter("Black", typeof(int));
    
            var blueParameter = blue.HasValue ?
                new ObjectParameter("Blue", blue) :
                new ObjectParameter("Blue", typeof(int));
    
            var redParameter = red.HasValue ?
                new ObjectParameter("Red", red) :
                new ObjectParameter("Red", typeof(int));
    
            var greenParameter = green.HasValue ?
                new ObjectParameter("Green", green) :
                new ObjectParameter("Green", typeof(int));
    
            var whiteParameter = white.HasValue ?
                new ObjectParameter("White", white) :
                new ObjectParameter("White", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewOrder", userIDParameter, blackParameter, blueParameter, redParameter, greenParameter, whiteParameter);
        }
    }
}
